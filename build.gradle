/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'idea'
    id 'maven-publish'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.12'
    id 'org.beryx.jlink' version '2.24.4'
    id 'net.researchgate.release' version '2.8.1'
    // javafxplugin uses moduleplugin:1.8.2 which errors on gradlew dist as per
    // https://github.com/java9-modularity/gradle-modules-plugin/issues/199
    // The solution is to upgrade to 1.8.10, but we would need to do that inside of the plugin
    // unless gradle lets you override. We also currently can't include moduleplugin here, as
    // gradle 6.4 added module support that conflicts and required additional work
    //id 'org.javamodularity.moduleplugin' version "1.8.10"
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.google.guava:guava:31.0.1-jre'
    implementation 'org.openjfx:javafx-controls:17.0.2'
    implementation 'org.openjfx:javafx-graphics:17.0.2'
    implementation 'org.openjfx:javafx-base:17.0.2'
    implementation 'org.openjfx:javafx-fxml:17.0.2'
    implementation 'com.google.protobuf:protobuf-java:3.19.4'
    implementation 'org.json:json:20211205'
    implementation 'com.j2html:j2html:1.5.0'
    testImplementation(platform('org.junit:junit-bom:5.8.2'))
    testImplementation('org.junit.jupiter:junit-jupiter')
    testImplementation 'net.java.dev.jna:jna:5.9.0'
}

group = 'com.github.nicholasmoser'
version = '4.0.0-SNAPSHOT'
description = 'GNTool'
sourceCompatibility = '17'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
	useJUnitPlatform()
}

application {
    mainModule = 'com.github.nicholasmoser'
    mainClass = 'com.github.nicholasmoser.GNTool'
}

javafx {
    version = "17.0.2"
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

jlink {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'GNTool'
        noConsole = true
    }
}

task ffmpeg(type: Copy) {
    from file("ffmpeg.exe")
    into file("$buildDir/image/bin")
    dependsOn jlinkZip
    description "Copy over the ffmpeg Windows binary"
}

task ffmpegLicense(type: Copy) {
    from "licenses/ffmpeg"
    into "$buildDir/image/legal/ffmpeg"
    dependsOn jlinkZip
    description "Copy over the ffmpeg license"
}

task txg2tpl(type: Copy) {
    from file("TXG2TPL.exe")
    into file("$buildDir/image/bin")
    dependsOn jlinkZip
    description "Copy over the txg2tpl Windows binary"
}

task txg2tplLicense(type: Copy) {
    from "licenses/txg2tpl"
    into "$buildDir/image/legal/txg2tpl"
    dependsOn jlinkZip
    description "Copy over the txg2tpl license"
}

task topLevelBat(type: Copy) {
    from "scripts/GNTool.bat"
    into "$buildDir/image/"
    dependsOn jlinkZip
    description "Copy over the top-level start bat file"
}

task dist(type: Zip) {
    baseName 'gntool'
    destinationDirectory = file("$buildDir/dist/")
    from "$buildDir/image/"
    dependsOn build, jlinkZip, ffmpeg, ffmpegLicense, txg2tpl, txg2tplLicense, topLevelBat
    description "Generate a distribution for a release"
}
